@import '../../_variables';

.party-state-map {
  svg {
    display: block;
    margin: 0 auto;
    max-width: 100%;
  }

  path.state {
    stroke: #ddd;
    stroke-width: 10; // divided by 10
    fill: #fff;
  }

  g.counties path {
    stroke: white;
    stroke-width: 10; // divided by 10
    fill: #eee;

    &.hover {
      stroke: black;
      stroke-width: 20; // divided by 10
      fill: rgba(255, 255, 255, 0.2);
      pointer-events: none; // so it doesn't cause mouseleave
    }
  }

  g.cities {
    pointer-events: none;
  }

  circle {
    fill: black;
    stroke: white;
    stroke-width: 1px;
  }

  text {
    // JavaScript will position this text correctly; only JavaScript can
    // measure the width, because only JavaScript has the font.
    fill: none;
    font-family: Source Sans Pro, Helvetica, Arial, sans-serif;
    font-size: 14px;

    // JavaScript doesn't know where the text's baseline is, and that's the `y`
    // coordinate by default. Make (x,y) point to the lower-left of the text.
    dominant-baseline: text-before-edge;

    &.background {
      fill: none;
      stroke: white;
      stroke-width: 3px;
    }

    &.foreground {
      fill: #333;
    }
  }
}

.race[data-party-id=Dem] svg g.counties {
  path.candidate-leads {
    fill: $strongDem;
  }

  path.candidate-trails {
    fill: $undecided;
  }
}

.race[data-party-id=GOP] svg g.counties {
  path.candidate-came-first {
    fill: $strongGOP;
  }

  path.candidate-came-second {
    fill: $undecided;
  }

  path.candidate-did-badly {
    fill: $undecided;
  }
}

.race.future .party-state-map g.counties {
  display: none;
}

.race.present .party-state-map path.state,
.race.past .party-state-map path.state {
  display: none;
}
