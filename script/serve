#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
Bundler.require(:default, :development)

require_relative '../lib/paths'

def on_event
  system("#{Paths.Script}/build")
  system("rspec") unless ENV['SKIP_RSPEC']
end

listener = Listen.to('app', 'lib', 'assets', 'spec', 'script', only: /\.(rb|js|json|png|css|sass|scss|haml)$/) do |modified, added, removed|
  files = Set.new(modified + added + removed) - [ "#{Paths.Assets}/javascripts/states.js", "#{Paths.Assets}/javascripts/race_days.js" ]
  if !files.empty?
    on_event
  end
end

on_event
listener.start

app = Rack::Builder.new do
  no_cache = { 'Cache-Control' => 'no-cache' }
  use(Rack::Static, urls: { '/2016' => '2016.html' }, root: Paths.Dist, header_rules: [[ :all, no_cache ]])
  use(Rack::TryStatic, root: Paths.Dist, urls: [ '/2016/primaries' ], try: [ '.html' ], header_rules: [[ :all, no_cache ]])
  use(Rack::Static,
      urls: [ '/2016' ],
      root: Paths.Dist,
      header_rules: [
        [ :all, { 'Cache-Control' => 'public, max-age=31536000', 'Expires' => (Time.now + 86400 * 365).utc.rfc2822 }],
        [ %w(css), { 'Content-Type' => 'text/css; charset=utf-8' } ],
        [ %w(js), { 'Content-Type' => 'application/javascript; charset=utf-8' } ],
        [ %w(json), { 'Content-Type' => 'application/json' } ]
      ]
  )

  run lambda { |env| [ 404, { 'Content-Type' => 'text/html' }, [ 'Not Found' ]] }
end

Rack::Server.start(app: app, Port: 3000) # will return after Ctrl+C

listener.stop
