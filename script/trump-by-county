#!/usr/bin/env ruby
require 'ruby-immutable-struct'
require 'csv'
require_relative '../lib/env'
require_relative '../app/models/database'
db = Database.load

fips_lookup = {}

db.candidate_county_races.select{|ccr| ccr.candidate.party_id == "GOP" and ccr.candidate.name == "Trump"}.each{|ccr|
	#puts "#{ccr.fips_int}, #{ccr.candidate_percent_votes}"
	fips_lookup[ccr.fips_int] = [ccr.fips_int, ccr.candidate_percent_votes]
}

contents = CSV.parse(File.read("#{Paths.StaticData}/trump-data/cdc-drug-poisoning.csv"))
header = contents.first
found = 0
contents[1..-1].select{|row| row[header.index("Year")] == "2014"}.each{|row|
	est = row[header.index("Estimated Age-adjusted Death Rate, 11 Categories (in ranges)")]
	hi_est = est.split("-").last.gsub(">", "")
	fips = row[header.index("FIPS")].to_i
	if fips_lookup.keys.include? fips
		found += 1
		fips_lookup[fips].push(hi_est)
		fips_lookup[fips].push(est)
	end
}
#puts "found #{found}"

contents = CSV.parse(File.read("#{Paths.StaticData}/trump-data/2014-5year-est-poverty-rate.csv", {:encoding => 'ISO-8859-1'}))
header = contents.first
valid = contents[1..-1].select{|row| fips_lookup.keys.include? row[header.index("Id2")].to_i}
valid.each{|row|
	rate = row[header.index("poverty-rate")].to_i.round(1)
	fips = row[header.index("Id2")].to_i
	fips_lookup[fips].push(rate)
}

contents = CSV.parse(File.read("#{Paths.StaticData}/trump-data/ruralurbancodes2013.csv", {:encoding => 'ISO-8859-1'}))
header = contents.first
valid = contents[1..-1].select{|row| fips_lookup.keys.include? row[header.index("FIPS")].to_i}
valid.each{|row|
	rucc = row[header.index("RUCC_2013")]
	fips = row[header.index("FIPS")].to_i
	fips_lookup[fips].push(rucc)
}

contents = CSV.parse(File.read("#{Paths.StaticData}/trump-data/education-attainment.csv", {:encoding => 'ISO-8859-1'}))
header = contents.first
valid = contents[1..-1].select{|row| fips_lookup.keys.include? row[header.index("Id2")].to_i}
valid.each{|row|
	 	 			
	data = [
		row[header.index("Total; Estimate; Population 25 years and over - Less than 9th grade")],
		row[header.index("Total; Estimate; Population 25 years and over - 9th to 12th grade, no diploma")],
		row[header.index("Total; Estimate; Population 25 years and over - High school graduate (includes equivalency)")],
		row[header.index("Total; Estimate; Population 25 years and over - Some college, no degree")],
		row[header.index("Total; Estimate; Population 25 years and over - Associate's degree")],
		row[header.index("Total; Estimate; Population 25 years and over - Bachelor's degree")],
		row[header.index("Total; Estimate; Population 25 years and over - Graduate or professional degree")]
		]
	fips = row[header.index("Id2")].to_i
	fips_lookup[fips] = fips_lookup[fips] + data
}

contents = CSV.parse(File.read("#{Paths.StaticData}/trump-data/minority.csv", {:encoding => 'ISO-8859-1'}))
header = contents.first
valid = contents[1..-1].select{|row| fips_lookup.keys.include? row[header.index("Id2")].to_i}
valid.each{|row|
	white = row[header.index("pct-white")].to_i.round(2)
	minority = row[header.index("pct-non-white")].to_i.round(2)
	fips = row[header.index("Id2")].to_i
	fips_lookup[fips].push(white)
	fips_lookup[fips].push(minority)
	fips_lookup[fips] = [row[header.index("Geography")]] + fips_lookup[fips]
}

puts "name, state, fips, trump-pct-of-votes, highest-od-estimate, od-estimate-range, poverty-rate, rucc, edu-less-than-9th-pct, edu-9-to-12-no-diploma-pct, edu-highschool-grad-pct, edu-some-college-pct, edu-associates-pct, edu-bachelors-pct, edu-grad-pct, pct-white, pct-minority"
fips_lookup.values.each{|row|
	puts row.join(",")
}

